def game_of_life(board):
    def count_live_neighbors(board, i, j):
        directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]
        count = 0
        for direction in directions:
            ni, nj = i + direction[0], j + direction[1]
            if 0 <= ni < len(board) and 0 <= nj < len(board[0]) and abs(board[ni][nj]) == 1:
                count += 1
        return count

    for i in range(len(board)):
        for j in range(len(board[0])):
            live_neighbors = count_live_neighbors(board, i, j)
            if board[i][j] == 1 and (live_neighbors < 2 or live_neighbors > 3):
                board[i][j] = -1
            if board[i][j] == 0 and live_neighbors == 3:
                board[i][j] = 2

    for i in range(len(board)):
        for j in range(len(board[0])):
            if board[i][j] == -1:
                board[i][j] = 0
            if board[i][j] == 2:
                board[i][j] = 1

    return board

# Test cases
print(game_of_life([[0,1,0],[0,0,1],[1,1,1],[0,0,0]]))  # Output: [[0,0,0],[1,0,1],[0,1,1],[0,1,0]]
print(game_of_life([[1,1],[1,0]]))  # Output: [[1,1],[1,1]]
