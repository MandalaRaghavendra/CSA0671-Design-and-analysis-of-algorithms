def find_paths(m, n, N, i, j):
    dp = [[[0] * n for _ in range(m)] for _ in range(N+1)]
    dp[0][i][j] = 1
    result = 0

    for step in range(1, N+1):
        for x in range(m):
            for y in range(n):
                if dp[step-1][x][y] > 0:
                    for dx, dy in [(1,0), (-1,0), (0,1), (0,-1)]:
                        nx, ny = x + dx, y + dy
                        if 0 <= nx < m and 0 <= ny < n:
                            dp[step][nx][ny] += dp[step-1][x][y]
                        else:
                            result += dp[step-1][x][y]
    return result

# Test cases
print(find_paths(2, 2, 2, 0, 0))  # Output: 6
print(find_paths(1, 3, 3, 0, 1))  # Output: 12
