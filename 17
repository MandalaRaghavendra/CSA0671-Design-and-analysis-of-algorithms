def champagne_tower(poured, query_row, query_glass):
    dp = [[0] * k for k in range(1, 102)]
    dp[0][0] = poured
    
    for r in range(query_row + 1):
        for c in range(r + 1):
            if dp[r][c] >= 1:
                overflow = (dp[r][c] - 1.0) / 2.0
                dp[r + 1][c] += overflow
                dp[r + 1][c + 1] += overflow
                
    return min(1, dp[query_row][query_glass])

# Test cases
print(champagne_tower(1, 1, 1))  # Output: 0.0
print(champagne_tower(2, 1, 1))  # Output: 0.5
print(champagne_tower(100000009, 33, 17))  # Output: 1.0 (an example with a large input)
